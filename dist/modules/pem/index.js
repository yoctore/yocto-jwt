/* yocto-jwt - Manage jwt token, and encrypt/decrypt all request based on jwt webtoken and cert - V1.7.0 */
"use strict";function Pem(){this.state=!1}var pem=require("pem"),Q=require("q"),_=require("lodash"),fs=require("fs"),path=require("path");Pem.prototype.processJwt=function(){var a=Q.defer();return pem.createCertificate({days:1,selfSigned:!0},function(b,c){var d={};if(b)a.reject(b);else{var e=path.normalize(process.cwd()+"/cert-jwt.tmp");fs.readFile(e,function(b,f){b&&fs.writeFile(e,JSON.stringify(c),function(b){b&&a.reject(b)}),c=_.isUndefined(f)?c:JSON.parse(f),_.merge(d,c),pem.getPublicKey(c.certificate,function(b,c){b?a.reject(b):(_.merge(d,c),this.state=!0,a.resolve(d))}.bind(this))}.bind(this))}}.bind(this)),a.promise},Pem.prototype.verify=function(a,b){var c=Q.defer();return pem.getModulus(a,function(a,d){a?c.reject(a):pem.getModulus(b,function(a,b){a||d.modulus!==b.modulus?c.reject(a?a:"certificate not match with given key"):c.resolve()})}),c.promise},Pem.prototype.isReady=function(){return this.state},module.exports=new Pem;